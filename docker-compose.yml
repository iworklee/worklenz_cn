services:
  frontend:
    image: registry.cn-hangzhou.aliyuncs.com/iworklee/worklenz-cn-frontend:2024111006
    container_name: worklenz_frontend
    ports:
      - "4200:4200"
    depends_on:
      backend:
        condition: service_started
    networks:
      - worklenz    

  backend:
    image: registry.cn-hangzhou.aliyuncs.com/iworklee/worklenz-cn-backend:2024111001
    container_name: worklenz_backend
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - ANGULAR_DIST_DIR
      - ANGULAR_SRC_DIR
      - AWS_REGION
      - BACKEND_PUBLIC_DIR
      - BACKEND_VIEWS_DIR
      - COMMIT_BUILD_IMMEDIATELY
      - COOKIE_SECRET
      - DB_HOST=192.168.0.2
      - DB_MAX_CLIENTS
      - DB_NAME=worklenz_db
      - DB_PASSWORD=password
      - DB_PORT=5432
      - DB_USER=worklenz_backend
      - GOOGLE_CALLBACK_URL
      - GOOGLE_CLIENT_ID
      - GOOGLE_CLIENT_SECRET
      - HOSTNAME
      - LOGIN_FAILURE_REDIRECT
      - NODE_ENV
      - PORT
      - SESSION_NAME
      - SESSION_SECRET
      - SLACK_WEBHOOK
      - SOCKET_IO_CORS
      - SOURCE_EMAIL
      - USE_PG_NATIVE
      - BUCKET
      - REGION
      - S3_URL
      - S3_ACCESS_KEY_ID
      - S3_SECRET_ACCESS_KEY
    networks:
      - worklenz  

  db:
    image: postgres:15
    container_name: worklenz_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "worklenz_db"
      POSTGRES_PASSWORD: "password"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d worklenz_db -U worklenz_backend"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - worklenz  
    volumes:
      - ./pg/data/:/var/lib/postgresql/data
      - ./worklenz-backend/database/:/docker-entrypoint-initdb.d

networks:
  worklenz:
    driver: bridge
